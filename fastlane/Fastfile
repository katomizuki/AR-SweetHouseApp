
default_platform(:ios)

platform :ios do

	before_all do
  if is_ci?
    create_keychain(
      name: ENV['USER_NAME'],
      password: ENV["MATCH_PASSWORD"],
      timeout: 1800
    )
  end
end

  desc "Test"
  lane :test do
    run_tests(device: "iPhone 14 Pro", 
              scheme: "RealitySuperApp")
  end

  lane :release do

	username = ENV['USER_NAME']
  	personal_github_access_token = ENV["PERSONAL_GITHUB_ACCESS_TOKEN"]
  	authorization_token_str = "#{username}:#{personal_github_access_token}"
  	basic_authorization_token = Base64.strict_encode64(authorization_token_str)

	api_key = app_store_connect_api_key(
  	key_id: ENV['ASC_API_KEY_ID'],
  	issuer_id: ENV['ASC_API_ISSUER_ID'],
  	key_content: ENV['ASC_KEY_CONTENT']
	)

	match(
  	git_basic_authorization: basic_authorization_token,
  	api_key: api_key,
  	type: "appstore",
  	readonly: true
	)

    	increment_version_number(xcodeproj: "RealitySuperApp.xcodeproj")
    	increment_build_number

    	build_app(scheme: "RealitySuperApp")

    	upload_to_app_store(
      	api_key: api_key,
      	skip_screenshots: true,
      	skip_metadata: true,
	precheck_include_in_app_purchases: false
   	)
  end

  lane :beta do

	username = ENV['USER_NAME']
  	personal_github_access_token = ENV["PERSONAL_GITHUB_ACCESS_TOKEN"]
  	authorization_token_str = "#{username}:#{personal_github_access_token}"
  	basic_authorization_token = Base64.strict_encode64(authorization_token_str)

	api_key = app_store_connect_api_key(
  	key_id: ENV['ASC_API_KEY_ID'],
  	issuer_id: ENV['ASC_API_ISSUER_ID'],
  	key_content: ENV['ASC_KEY_CONTENT']
	)

	match(
  	git_basic_authorization: basic_authorization_token,
  	api_key: api_key,
  	type: "adhoc",
  	readonly: true
	)
	
	increment_build_number
	build_app(
	scheme: "RealitySuperApp",
	silent: true,
	clean: true
	)

	upload_to_testflight(api_key: api_key)
  end
end
